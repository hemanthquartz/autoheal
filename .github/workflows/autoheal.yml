
name: Auto-Healing Deployment Pipeline

on:
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
      AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ARM_USE_OIDC: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python Dependencies
        run: |
          pip install -r scripts/requirements.txt

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.4.0'

      - name: Login to Azure
        uses: azure/login@v1
        with:
         client-id: ${{ secrets.AZURE_CLIENT_ID }}
         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Terraform Apply
        id: deploy
        run: |
          set +e
          terraform apply -auto-approve -input=false \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}" 2>&1 | tee tf_error_log.txt
          TF_EXIT_CODE=${PIPESTATUS[0]}
          echo "Terraform exited with code $TF_EXIT_CODE"
          echo "TF_EXIT_CODE=$TF_EXIT_CODE" >> $GITHUB_ENV
          if [[ "$TF_EXIT_CODE" -ne 0 ]]; then
            echo "DEPLOYMENT_FAILED=true" >> $GITHUB_ENV
          fi
        continue-on-error: true
        working-directory: terraform

      - name: Auto-Heal Deployment (if Terraform failed)
        if: always()
        run: |
          if [[ "$DEPLOYMENT_FAILED" == "true" ]]; then
            echo "Deployment failed. Running autoheal script..."
            echo "Checking directory contents before running autoheal:"
            ls -l $GITHUB_WORKSPACE/terraform
            cd $GITHUB_WORKSPACE  # Ensure correct working directory
            python3 scripts/autoheal.py
          else
            echo "Deployment succeeded. Skipping autoheal."
          fi

